version: '3.8'

services:
  astro-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: astro-website
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@postgres:5432/astro_db
      - API_SERVER_URL=http://backend:8080  # Wie in deinem Beispiel
    depends_on:
      - postgres
      - backend
    networks:
      - app-network
    restart: unless-stopped

  backend:
    image: maeddes/backendspringboot:hse24patch
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/shoppingdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: astro-postgres
    environment:
      - POSTGRES_DB=astro_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: